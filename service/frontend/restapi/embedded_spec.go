// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "title": "Dagu",
    "version": "0.0.1"
  },
  "host": "localhost:8080",
  "basePath": "/api/v1",
  "paths": {
    "/workflows": {
      "get": {
        "produces": [
          "application/json"
        ],
        "operationId": "listWorkflows",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/listWorkflowsResponse"
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          }
        }
      }
    },
    "/workflows/{workflowId}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "operationId": "getWorkflow",
        "parameters": [
          {
            "type": "string",
            "name": "workflowId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "tab",
            "in": "query"
          },
          {
            "type": "string",
            "name": "file",
            "in": "query"
          },
          {
            "type": "string",
            "name": "step",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/getWorkflowDetailResponse"
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          }
        }
      },
      "post": {
        "produces": [
          "application/json"
        ],
        "operationId": "postWorkflowAction",
        "parameters": [
          {
            "type": "string",
            "name": "workflowId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "action",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "name": "value",
            "in": "query"
          },
          {
            "type": "string",
            "name": "request-id",
            "in": "query"
          },
          {
            "type": "string",
            "name": "step",
            "in": "query"
          },
          {
            "type": "string",
            "name": "params",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/postWorkflowActionResponse"
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "ApiError": {
      "type": "object",
      "required": [
        "message",
        "detailedMessage"
      ],
      "properties": {
        "detailedMessage": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "condition": {
      "type": "object",
      "properties": {
        "Condition": {
          "type": "string"
        },
        "Expected": {
          "type": "string"
        }
      }
    },
    "getWorkflowDetailResponse": {
      "type": "object",
      "required": [
        "Title",
        "DAG",
        "Tab",
        "Graph",
        "Definition",
        "LogData",
        "LogUrl",
        "StepLog",
        "ScLog",
        "Errors"
      ],
      "properties": {
        "DAG": {
          "$ref": "#/definitions/workflowStatusWithDetail"
        },
        "Definition": {
          "type": "string"
        },
        "Errors": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Graph": {
          "type": "string"
        },
        "LogData": {
          "$ref": "#/definitions/workflowLogResponse"
        },
        "LogUrl": {
          "type": "string"
        },
        "ScLog": {
          "$ref": "#/definitions/workflowSchedulerLogResponse"
        },
        "StepLog": {
          "$ref": "#/definitions/workflowStepLogResponse"
        },
        "Tab": {
          "type": "string"
        },
        "Title": {
          "type": "string"
        }
      }
    },
    "handlerOn": {
      "type": "object",
      "properties": {
        "Cancel": {
          "$ref": "#/definitions/stepObject"
        },
        "Exit": {
          "$ref": "#/definitions/stepObject"
        },
        "Failure": {
          "$ref": "#/definitions/stepObject"
        },
        "Success": {
          "$ref": "#/definitions/stepObject"
        }
      }
    },
    "listWorkflowsResponse": {
      "type": "object",
      "required": [
        "DAGs",
        "Errors",
        "HasError"
      ],
      "properties": {
        "DAGs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/workflowListItem"
          }
        },
        "Errors": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "HasError": {
          "type": "boolean"
        }
      }
    },
    "postWorkflowActionResponse": {
      "type": "object",
      "properties": {
        "NewWorkflowID": {
          "type": "string"
        }
      }
    },
    "repeatPolicy": {
      "type": "object",
      "properties": {
        "Interval": {
          "type": "integer"
        },
        "Repeat": {
          "type": "boolean"
        }
      }
    },
    "schedule": {
      "type": "object",
      "required": [
        "Expression"
      ],
      "properties": {
        "Expression": {
          "type": "string"
        }
      }
    },
    "statusNode": {
      "type": "object",
      "required": [
        "Step",
        "Log",
        "StartedAt",
        "FinishedAt",
        "Status",
        "RetryCount",
        "DoneCount",
        "Error",
        "StatusText"
      ],
      "properties": {
        "DoneCount": {
          "type": "integer"
        },
        "Error": {
          "type": "string"
        },
        "FinishedAt": {
          "type": "string"
        },
        "Log": {
          "type": "string"
        },
        "RetryCount": {
          "type": "integer"
        },
        "StartedAt": {
          "type": "string"
        },
        "Status": {
          "type": "integer"
        },
        "StatusText": {
          "type": "string"
        },
        "Step": {
          "$ref": "#/definitions/stepObject"
        }
      }
    },
    "stepObject": {
      "type": "object",
      "required": [
        "Name",
        "Description",
        "Variables",
        "Dir",
        "CmdWithArgs",
        "Command",
        "Script",
        "Stdout",
        "Stderr",
        "Output",
        "Args",
        "Depends",
        "RepeatPolicy",
        "MailOnError",
        "Preconditions"
      ],
      "properties": {
        "Args": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "CmdWithArgs": {
          "type": "string"
        },
        "Command": {
          "type": "string"
        },
        "Depends": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Description": {
          "type": "string"
        },
        "Dir": {
          "type": "string"
        },
        "MailOnError": {
          "type": "boolean"
        },
        "Name": {
          "type": "string"
        },
        "Output": {
          "type": "string"
        },
        "Preconditions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/condition"
          }
        },
        "RepeatPolicy": {
          "$ref": "#/definitions/repeatPolicy"
        },
        "Script": {
          "type": "string"
        },
        "Stderr": {
          "type": "string"
        },
        "Stdout": {
          "type": "string"
        },
        "Variables": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "workflow": {
      "type": "object",
      "required": [
        "Group",
        "Name",
        "Schedule",
        "Description",
        "Params",
        "DefaultParams",
        "Tags"
      ],
      "properties": {
        "DefaultParams": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "Group": {
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "Params": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Schedule": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/schedule"
          }
        },
        "Tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "workflowDetail": {
      "type": "object",
      "required": [
        "Location",
        "Group",
        "Name",
        "Schedule",
        "Description",
        "Env",
        "LogDir",
        "HandlerOn",
        "Steps",
        "Delay",
        "HistRetentionDays",
        "Preconditions",
        "MaxActiveRuns",
        "Params",
        "DefaultParams",
        "Tags"
      ],
      "properties": {
        "DefaultParams": {
          "type": "string"
        },
        "Delay": {
          "type": "integer"
        },
        "Description": {
          "type": "string"
        },
        "Env": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Group": {
          "type": "string"
        },
        "HandlerOn": {
          "$ref": "#/definitions/handlerOn"
        },
        "HistRetentionDays": {
          "type": "integer"
        },
        "Location": {
          "type": "string"
        },
        "LogDir": {
          "type": "string"
        },
        "MaxActiveRuns": {
          "type": "integer"
        },
        "Name": {
          "type": "string"
        },
        "Params": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Preconditions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/condition"
          }
        },
        "Schedule": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/schedule"
          }
        },
        "Steps": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/stepObject"
          }
        },
        "Tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "workflowListItem": {
      "type": "object",
      "required": [
        "File",
        "Dir",
        "DAG",
        "Status",
        "Suspended",
        "Error",
        "ErrorT"
      ],
      "properties": {
        "DAG": {
          "$ref": "#/definitions/workflow"
        },
        "Dir": {
          "type": "string"
        },
        "Error": {
          "type": "string"
        },
        "ErrorT": {
          "type": "string"
        },
        "File": {
          "type": "string"
        },
        "Status": {
          "$ref": "#/definitions/workflowStatus"
        },
        "Suspended": {
          "type": "boolean"
        }
      }
    },
    "workflowLogGridItem": {
      "type": "object",
      "required": [
        "Name",
        "Vals"
      ],
      "properties": {
        "Name": {
          "type": "string"
        },
        "Vals": {
          "type": "array",
          "items": {
            "type": "integer"
          }
        }
      }
    },
    "workflowLogResponse": {
      "type": "object",
      "required": [
        "GridData",
        "Logs"
      ],
      "properties": {
        "GridData": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/workflowLogGridItem"
          }
        },
        "Logs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/workflowStatusFile"
          }
        }
      }
    },
    "workflowSchedulerLogResponse": {
      "type": "object",
      "required": [
        "LogFile",
        "Content"
      ],
      "properties": {
        "Content": {
          "type": "string"
        },
        "LogFile": {
          "type": "string"
        }
      }
    },
    "workflowStatus": {
      "type": "object",
      "required": [
        "RequestId",
        "Name",
        "Status",
        "StatusText",
        "Pid",
        "StartedAt",
        "FinishedAt",
        "Log",
        "Params"
      ],
      "properties": {
        "FinishedAt": {
          "type": "string"
        },
        "Log": {
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "Params": {
          "type": "string"
        },
        "Pid": {
          "type": "integer"
        },
        "RequestId": {
          "type": "string"
        },
        "StartedAt": {
          "type": "string"
        },
        "Status": {
          "type": "integer"
        },
        "StatusText": {
          "type": "string"
        }
      }
    },
    "workflowStatusDetail": {
      "type": "object",
      "required": [
        "RequestId",
        "Name",
        "Status",
        "StatusText",
        "Pid",
        "Nodes",
        "OnExit",
        "OnSuccess",
        "OnFailure",
        "OnCancel",
        "StartedAt",
        "FinishedAt",
        "Log",
        "Params"
      ],
      "properties": {
        "FinishedAt": {
          "type": "string"
        },
        "Log": {
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "Nodes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/statusNode"
          }
        },
        "OnCancel": {
          "$ref": "#/definitions/statusNode"
        },
        "OnExit": {
          "$ref": "#/definitions/statusNode"
        },
        "OnFailure": {
          "$ref": "#/definitions/statusNode"
        },
        "OnSuccess": {
          "$ref": "#/definitions/statusNode"
        },
        "Params": {
          "type": "string"
        },
        "Pid": {
          "type": "integer"
        },
        "RequestId": {
          "type": "string"
        },
        "StartedAt": {
          "type": "string"
        },
        "Status": {
          "type": "integer"
        },
        "StatusText": {
          "type": "string"
        }
      }
    },
    "workflowStatusFile": {
      "type": "object",
      "required": [
        "File"
      ],
      "properties": {
        "File": {
          "type": "string"
        },
        "Status": {
          "$ref": "#/definitions/workflowStatusDetail"
        }
      }
    },
    "workflowStatusWithDetail": {
      "type": "object",
      "required": [
        "File",
        "Dir",
        "DAG",
        "Status",
        "Suspended",
        "Error",
        "ErrorT"
      ],
      "properties": {
        "DAG": {
          "$ref": "#/definitions/workflowDetail"
        },
        "Dir": {
          "type": "string"
        },
        "Error": {
          "type": "string"
        },
        "ErrorT": {
          "type": "string"
        },
        "File": {
          "type": "string"
        },
        "Status": {
          "$ref": "#/definitions/workflowStatusDetail"
        },
        "Suspended": {
          "type": "boolean"
        }
      }
    },
    "workflowStepLogResponse": {
      "type": "object",
      "required": [
        "Step",
        "LogFile",
        "Content"
      ],
      "properties": {
        "Content": {
          "type": "string"
        },
        "LogFile": {
          "type": "string"
        },
        "Step": {
          "$ref": "#/definitions/statusNode"
        }
      }
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "title": "Dagu",
    "version": "0.0.1"
  },
  "host": "localhost:8080",
  "basePath": "/api/v1",
  "paths": {
    "/workflows": {
      "get": {
        "produces": [
          "application/json"
        ],
        "operationId": "listWorkflows",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/listWorkflowsResponse"
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          }
        }
      }
    },
    "/workflows/{workflowId}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "operationId": "getWorkflow",
        "parameters": [
          {
            "type": "string",
            "name": "workflowId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "tab",
            "in": "query"
          },
          {
            "type": "string",
            "name": "file",
            "in": "query"
          },
          {
            "type": "string",
            "name": "step",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/getWorkflowDetailResponse"
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          }
        }
      },
      "post": {
        "produces": [
          "application/json"
        ],
        "operationId": "postWorkflowAction",
        "parameters": [
          {
            "type": "string",
            "name": "workflowId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "action",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "name": "value",
            "in": "query"
          },
          {
            "type": "string",
            "name": "request-id",
            "in": "query"
          },
          {
            "type": "string",
            "name": "step",
            "in": "query"
          },
          {
            "type": "string",
            "name": "params",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/postWorkflowActionResponse"
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "ApiError": {
      "type": "object",
      "required": [
        "message",
        "detailedMessage"
      ],
      "properties": {
        "detailedMessage": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "condition": {
      "type": "object",
      "properties": {
        "Condition": {
          "type": "string"
        },
        "Expected": {
          "type": "string"
        }
      }
    },
    "getWorkflowDetailResponse": {
      "type": "object",
      "required": [
        "Title",
        "DAG",
        "Tab",
        "Graph",
        "Definition",
        "LogData",
        "LogUrl",
        "StepLog",
        "ScLog",
        "Errors"
      ],
      "properties": {
        "DAG": {
          "$ref": "#/definitions/workflowStatusWithDetail"
        },
        "Definition": {
          "type": "string"
        },
        "Errors": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Graph": {
          "type": "string"
        },
        "LogData": {
          "$ref": "#/definitions/workflowLogResponse"
        },
        "LogUrl": {
          "type": "string"
        },
        "ScLog": {
          "$ref": "#/definitions/workflowSchedulerLogResponse"
        },
        "StepLog": {
          "$ref": "#/definitions/workflowStepLogResponse"
        },
        "Tab": {
          "type": "string"
        },
        "Title": {
          "type": "string"
        }
      }
    },
    "handlerOn": {
      "type": "object",
      "properties": {
        "Cancel": {
          "$ref": "#/definitions/stepObject"
        },
        "Exit": {
          "$ref": "#/definitions/stepObject"
        },
        "Failure": {
          "$ref": "#/definitions/stepObject"
        },
        "Success": {
          "$ref": "#/definitions/stepObject"
        }
      }
    },
    "listWorkflowsResponse": {
      "type": "object",
      "required": [
        "DAGs",
        "Errors",
        "HasError"
      ],
      "properties": {
        "DAGs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/workflowListItem"
          }
        },
        "Errors": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "HasError": {
          "type": "boolean"
        }
      }
    },
    "postWorkflowActionResponse": {
      "type": "object",
      "properties": {
        "NewWorkflowID": {
          "type": "string"
        }
      }
    },
    "repeatPolicy": {
      "type": "object",
      "properties": {
        "Interval": {
          "type": "integer"
        },
        "Repeat": {
          "type": "boolean"
        }
      }
    },
    "schedule": {
      "type": "object",
      "required": [
        "Expression"
      ],
      "properties": {
        "Expression": {
          "type": "string"
        }
      }
    },
    "statusNode": {
      "type": "object",
      "required": [
        "Step",
        "Log",
        "StartedAt",
        "FinishedAt",
        "Status",
        "RetryCount",
        "DoneCount",
        "Error",
        "StatusText"
      ],
      "properties": {
        "DoneCount": {
          "type": "integer"
        },
        "Error": {
          "type": "string"
        },
        "FinishedAt": {
          "type": "string"
        },
        "Log": {
          "type": "string"
        },
        "RetryCount": {
          "type": "integer"
        },
        "StartedAt": {
          "type": "string"
        },
        "Status": {
          "type": "integer"
        },
        "StatusText": {
          "type": "string"
        },
        "Step": {
          "$ref": "#/definitions/stepObject"
        }
      }
    },
    "stepObject": {
      "type": "object",
      "required": [
        "Name",
        "Description",
        "Variables",
        "Dir",
        "CmdWithArgs",
        "Command",
        "Script",
        "Stdout",
        "Stderr",
        "Output",
        "Args",
        "Depends",
        "RepeatPolicy",
        "MailOnError",
        "Preconditions"
      ],
      "properties": {
        "Args": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "CmdWithArgs": {
          "type": "string"
        },
        "Command": {
          "type": "string"
        },
        "Depends": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Description": {
          "type": "string"
        },
        "Dir": {
          "type": "string"
        },
        "MailOnError": {
          "type": "boolean"
        },
        "Name": {
          "type": "string"
        },
        "Output": {
          "type": "string"
        },
        "Preconditions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/condition"
          }
        },
        "RepeatPolicy": {
          "$ref": "#/definitions/repeatPolicy"
        },
        "Script": {
          "type": "string"
        },
        "Stderr": {
          "type": "string"
        },
        "Stdout": {
          "type": "string"
        },
        "Variables": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "workflow": {
      "type": "object",
      "required": [
        "Group",
        "Name",
        "Schedule",
        "Description",
        "Params",
        "DefaultParams",
        "Tags"
      ],
      "properties": {
        "DefaultParams": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "Group": {
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "Params": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Schedule": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/schedule"
          }
        },
        "Tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "workflowDetail": {
      "type": "object",
      "required": [
        "Location",
        "Group",
        "Name",
        "Schedule",
        "Description",
        "Env",
        "LogDir",
        "HandlerOn",
        "Steps",
        "Delay",
        "HistRetentionDays",
        "Preconditions",
        "MaxActiveRuns",
        "Params",
        "DefaultParams",
        "Tags"
      ],
      "properties": {
        "DefaultParams": {
          "type": "string"
        },
        "Delay": {
          "type": "integer"
        },
        "Description": {
          "type": "string"
        },
        "Env": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Group": {
          "type": "string"
        },
        "HandlerOn": {
          "$ref": "#/definitions/handlerOn"
        },
        "HistRetentionDays": {
          "type": "integer"
        },
        "Location": {
          "type": "string"
        },
        "LogDir": {
          "type": "string"
        },
        "MaxActiveRuns": {
          "type": "integer"
        },
        "Name": {
          "type": "string"
        },
        "Params": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Preconditions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/condition"
          }
        },
        "Schedule": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/schedule"
          }
        },
        "Steps": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/stepObject"
          }
        },
        "Tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "workflowListItem": {
      "type": "object",
      "required": [
        "File",
        "Dir",
        "DAG",
        "Status",
        "Suspended",
        "Error",
        "ErrorT"
      ],
      "properties": {
        "DAG": {
          "$ref": "#/definitions/workflow"
        },
        "Dir": {
          "type": "string"
        },
        "Error": {
          "type": "string"
        },
        "ErrorT": {
          "type": "string"
        },
        "File": {
          "type": "string"
        },
        "Status": {
          "$ref": "#/definitions/workflowStatus"
        },
        "Suspended": {
          "type": "boolean"
        }
      }
    },
    "workflowLogGridItem": {
      "type": "object",
      "required": [
        "Name",
        "Vals"
      ],
      "properties": {
        "Name": {
          "type": "string"
        },
        "Vals": {
          "type": "array",
          "items": {
            "type": "integer"
          }
        }
      }
    },
    "workflowLogResponse": {
      "type": "object",
      "required": [
        "GridData",
        "Logs"
      ],
      "properties": {
        "GridData": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/workflowLogGridItem"
          }
        },
        "Logs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/workflowStatusFile"
          }
        }
      }
    },
    "workflowSchedulerLogResponse": {
      "type": "object",
      "required": [
        "LogFile",
        "Content"
      ],
      "properties": {
        "Content": {
          "type": "string"
        },
        "LogFile": {
          "type": "string"
        }
      }
    },
    "workflowStatus": {
      "type": "object",
      "required": [
        "RequestId",
        "Name",
        "Status",
        "StatusText",
        "Pid",
        "StartedAt",
        "FinishedAt",
        "Log",
        "Params"
      ],
      "properties": {
        "FinishedAt": {
          "type": "string"
        },
        "Log": {
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "Params": {
          "type": "string"
        },
        "Pid": {
          "type": "integer"
        },
        "RequestId": {
          "type": "string"
        },
        "StartedAt": {
          "type": "string"
        },
        "Status": {
          "type": "integer"
        },
        "StatusText": {
          "type": "string"
        }
      }
    },
    "workflowStatusDetail": {
      "type": "object",
      "required": [
        "RequestId",
        "Name",
        "Status",
        "StatusText",
        "Pid",
        "Nodes",
        "OnExit",
        "OnSuccess",
        "OnFailure",
        "OnCancel",
        "StartedAt",
        "FinishedAt",
        "Log",
        "Params"
      ],
      "properties": {
        "FinishedAt": {
          "type": "string"
        },
        "Log": {
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "Nodes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/statusNode"
          }
        },
        "OnCancel": {
          "$ref": "#/definitions/statusNode"
        },
        "OnExit": {
          "$ref": "#/definitions/statusNode"
        },
        "OnFailure": {
          "$ref": "#/definitions/statusNode"
        },
        "OnSuccess": {
          "$ref": "#/definitions/statusNode"
        },
        "Params": {
          "type": "string"
        },
        "Pid": {
          "type": "integer"
        },
        "RequestId": {
          "type": "string"
        },
        "StartedAt": {
          "type": "string"
        },
        "Status": {
          "type": "integer"
        },
        "StatusText": {
          "type": "string"
        }
      }
    },
    "workflowStatusFile": {
      "type": "object",
      "required": [
        "File"
      ],
      "properties": {
        "File": {
          "type": "string"
        },
        "Status": {
          "$ref": "#/definitions/workflowStatusDetail"
        }
      }
    },
    "workflowStatusWithDetail": {
      "type": "object",
      "required": [
        "File",
        "Dir",
        "DAG",
        "Status",
        "Suspended",
        "Error",
        "ErrorT"
      ],
      "properties": {
        "DAG": {
          "$ref": "#/definitions/workflowDetail"
        },
        "Dir": {
          "type": "string"
        },
        "Error": {
          "type": "string"
        },
        "ErrorT": {
          "type": "string"
        },
        "File": {
          "type": "string"
        },
        "Status": {
          "$ref": "#/definitions/workflowStatusDetail"
        },
        "Suspended": {
          "type": "boolean"
        }
      }
    },
    "workflowStepLogResponse": {
      "type": "object",
      "required": [
        "Step",
        "LogFile",
        "Content"
      ],
      "properties": {
        "Content": {
          "type": "string"
        },
        "LogFile": {
          "type": "string"
        },
        "Step": {
          "$ref": "#/definitions/statusNode"
        }
      }
    }
  }
}`))
}
