// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "title": "Dagu",
    "version": "0.0.1"
  },
  "host": "localhost:8080",
  "basePath": "/api/v1",
  "paths": {
    "/workflows": {
      "get": {
        "produces": [
          "application/json"
        ],
        "operationId": "listWorkflows",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/listWorkflowsResponse"
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "ApiError": {
      "type": "object",
      "properties": {
        "detailedMessage": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "handlerOn": {
      "type": "object",
      "properties": {
        "Cancel": {
          "type": "string"
        },
        "Exit": {
          "type": "string"
        },
        "Failure": {
          "type": "string"
        },
        "Success": {
          "type": "string"
        }
      }
    },
    "listWorkflowsResponse": {
      "type": "object",
      "properties": {
        "Charset": {
          "type": "string"
        },
        "DAGs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/workflowListItem"
          }
        },
        "Errors": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "HasError": {
          "type": "boolean"
        },
        "Title": {
          "type": "string"
        }
      }
    },
    "schedule": {
      "type": "object",
      "properties": {
        "Expression": {
          "type": "string"
        }
      }
    },
    "workflowDef": {
      "type": "object",
      "properties": {
        "DefaultParams": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "Group": {
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "Params": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Schedule": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/schedule"
          }
        },
        "Tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "workflowListItem": {
      "type": "object",
      "properties": {
        "DAG": {
          "$ref": "#/definitions/workflowDef"
        },
        "Dir": {
          "type": "string"
        },
        "Error": {
          "type": "string"
        },
        "ErrorT": {
          "type": "string"
        },
        "File": {
          "type": "string"
        },
        "Status": {
          "$ref": "#/definitions/workflowStatus"
        },
        "Suspended": {
          "type": "boolean"
        }
      }
    },
    "workflowStatus": {
      "type": "object",
      "properties": {
        "FinishedAt": {
          "type": "string"
        },
        "Log": {
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "Nodes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "OnCancel": {
          "type": "string"
        },
        "OnExit": {
          "type": "string"
        },
        "OnFailure": {
          "type": "string"
        },
        "OnSuccess": {
          "type": "string"
        },
        "Params": {
          "type": "string"
        },
        "Pid": {
          "type": "integer"
        },
        "RequestId": {
          "type": "string"
        },
        "StartedAt": {
          "type": "string"
        },
        "Status": {
          "type": "integer"
        },
        "StatusText": {
          "type": "string"
        }
      }
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "title": "Dagu",
    "version": "0.0.1"
  },
  "host": "localhost:8080",
  "basePath": "/api/v1",
  "paths": {
    "/workflows": {
      "get": {
        "produces": [
          "application/json"
        ],
        "operationId": "listWorkflows",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/listWorkflowsResponse"
            }
          },
          "default": {
            "description": "Generic error response.",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "ApiError": {
      "type": "object",
      "properties": {
        "detailedMessage": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "handlerOn": {
      "type": "object",
      "properties": {
        "Cancel": {
          "type": "string"
        },
        "Exit": {
          "type": "string"
        },
        "Failure": {
          "type": "string"
        },
        "Success": {
          "type": "string"
        }
      }
    },
    "listWorkflowsResponse": {
      "type": "object",
      "properties": {
        "Charset": {
          "type": "string"
        },
        "DAGs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/workflowListItem"
          }
        },
        "Errors": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "HasError": {
          "type": "boolean"
        },
        "Title": {
          "type": "string"
        }
      }
    },
    "schedule": {
      "type": "object",
      "properties": {
        "Expression": {
          "type": "string"
        }
      }
    },
    "workflowDef": {
      "type": "object",
      "properties": {
        "DefaultParams": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "Group": {
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "Params": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Schedule": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/schedule"
          }
        },
        "Tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "workflowListItem": {
      "type": "object",
      "properties": {
        "DAG": {
          "$ref": "#/definitions/workflowDef"
        },
        "Dir": {
          "type": "string"
        },
        "Error": {
          "type": "string"
        },
        "ErrorT": {
          "type": "string"
        },
        "File": {
          "type": "string"
        },
        "Status": {
          "$ref": "#/definitions/workflowStatus"
        },
        "Suspended": {
          "type": "boolean"
        }
      }
    },
    "workflowStatus": {
      "type": "object",
      "properties": {
        "FinishedAt": {
          "type": "string"
        },
        "Log": {
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "Nodes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "OnCancel": {
          "type": "string"
        },
        "OnExit": {
          "type": "string"
        },
        "OnFailure": {
          "type": "string"
        },
        "OnSuccess": {
          "type": "string"
        },
        "Params": {
          "type": "string"
        },
        "Pid": {
          "type": "integer"
        },
        "RequestId": {
          "type": "string"
        },
        "StartedAt": {
          "type": "string"
        },
        "Status": {
          "type": "integer"
        },
        "StatusText": {
          "type": "string"
        }
      }
    }
  }
}`))
}
