# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2023, Dagu Developers
# This file is distributed under the same license as the Dagu package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2023.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Dagu \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-04-14 21:57+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: ja\n"
"Language-Team: ja <LL@li.org>\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.12.1\n"

#: ../../source/yaml_format.rst:2
msgid "YAML Format"
msgstr ""

#: ../../source/yaml_format.rst:5
msgid "Minimal DAG Definition"
msgstr ""

#: ../../source/yaml_format.rst:7
msgid "The minimal DAG definition is as simple as follows."
msgstr ""

#: ../../source/yaml_format.rst:20
msgid "Running Arbitrary Code Snippets"
msgstr ""

#: ../../source/yaml_format.rst:22
msgid ""
"``script`` field provides a way to run arbitrary snippets of code in any "
"language."
msgstr ""

#: ../../source/yaml_format.rst:40
msgid "Defining Environment Variables"
msgstr ""

#: ../../source/yaml_format.rst:42
msgid ""
"You can define environment variables and refer to them using the ``env`` "
"field."
msgstr ""

#: ../../source/yaml_format.rst:55
msgid "Defining and Using Parameters"
msgstr ""

#: ../../source/yaml_format.rst:57
msgid ""
"You can define parameters using the ``params`` field and refer to each "
"parameter as $1, $2, etc. Parameters can also be command substitutions or"
" environment variables. It can be overridden by the ``--params=`` "
"parameter of the ``start`` command."
msgstr ""

#: ../../source/yaml_format.rst:66
msgid "Named parameters are also available as follows."
msgstr ""

#: ../../source/yaml_format.rst:76
msgid "Using Command Substitution"
msgstr ""

#: ../../source/yaml_format.rst:78
msgid ""
"You can use command substitution in field values. I.e., a string enclosed"
" in backquotes (`) is evaluated as a command and replaced with the result"
" of standard output."
msgstr ""

#: ../../source/yaml_format.rst:89
msgid "Adding Conditional Logic"
msgstr ""

#: ../../source/yaml_format.rst:91
msgid ""
"Sometimes you have parts of a DAG that you only want to run under certain"
" conditions. You can use the ``preconditions`` field to add conditional "
"branches to your DAG."
msgstr ""

#: ../../source/yaml_format.rst:93
msgid "For example, the task below only runs on the first date of each month."
msgstr ""

#: ../../source/yaml_format.rst:104
msgid ""
"If you want the DAG to continue to the next step regardless of the step's"
" conditional check result, you can use the ``continueOn`` field:"
msgstr ""

#: ../../source/yaml_format.rst:118
msgid "Setting Environment Variables with Standard Output"
msgstr ""

#: ../../source/yaml_format.rst:120
msgid ""
"The ``output`` field can be used to set an environment variable with "
"standard output. Leading and trailing space will be trimmed "
"automatically. The environment variables can be used in subsequent steps."
msgstr ""

#: ../../source/yaml_format.rst:130
msgid "Redirecting Stdout and Stderr"
msgstr ""

#: ../../source/yaml_format.rst:132
msgid "The `stdout` field can be used to write standard output to a file."
msgstr ""

#: ../../source/yaml_format.rst:141
msgid ""
"The `stderr` field allows to redirect stderr to other file without "
"writing to the normal log file."
msgstr ""

#: ../../source/yaml_format.rst:152
msgid "Adding Lifecycle Hooks"
msgstr ""

#: ../../source/yaml_format.rst:154
msgid ""
"It is often desirable to take action when a specific event happens, for "
"example, when a DAG fails. To achieve this, you can use `handlerOn` "
"fields."
msgstr ""

#: ../../source/yaml_format.rst:168
msgid "Repeating a Task at Regular Intervals"
msgstr ""

#: ../../source/yaml_format.rst:170
msgid ""
"If you want a task to repeat execution at regular intervals, you can use "
"the `repeatPolicy` field. If you want to stop the repeating task, you can"
" use the `stop` command to gracefully stop the task."
msgstr ""

#: ../../source/yaml_format.rst:182
msgid "Available Fields for DAGs"
msgstr ""

#: ../../source/yaml_format.rst:184
msgid ""
"This section provides a comprehensive list of available fields that can "
"be used to configure DAGs and their steps in detail. Each field serves a "
"specific purpose, enabling granular control over how the DAG runs. The "
"fields include:"
msgstr ""

#: ../../source/yaml_format.rst:186
msgid ""
"``name``: The name of the DAG, which is optional. The default name is the"
" name of the file."
msgstr ""

#: ../../source/yaml_format.rst:187
msgid "``description``: A brief description of the DAG."
msgstr ""

#: ../../source/yaml_format.rst:188
msgid "``schedule``: The execution schedule of the DAG in Cron expression format."
msgstr ""

#: ../../source/yaml_format.rst:189
msgid "``group``: The group name to organize DAGs, which is optional."
msgstr ""

#: ../../source/yaml_format.rst:190
msgid ""
"``tags``: Free tags that can be used to categorize DAGs, separated by "
"commas."
msgstr ""

#: ../../source/yaml_format.rst:191
msgid ""
"``env``: Environment variables that can be accessed by the DAG and its "
"steps."
msgstr ""

#: ../../source/yaml_format.rst:192
msgid ""
"``logDir``: The directory where the standard output is written. The "
"default value is ``${DAGU_HOME}/logs/dags``."
msgstr ""

#: ../../source/yaml_format.rst:193
msgid ""
"``restartWaitSec``: The number of seconds to wait after the DAG process "
"stops before restarting it."
msgstr ""

#: ../../source/yaml_format.rst:194
msgid ""
"``histRetentionDays``: The number of days to retain execution history "
"(not for log files)."
msgstr ""

#: ../../source/yaml_format.rst:195
msgid "``delaySec``: The interval time in seconds between steps."
msgstr ""

#: ../../source/yaml_format.rst:196
msgid "``maxActiveRuns``: The maximum number of parallel running steps."
msgstr ""

#: ../../source/yaml_format.rst:197
msgid ""
"``params``: The default parameters that can be referred to by ``$1``, "
"``$2``, and so on."
msgstr ""

#: ../../source/yaml_format.rst:198
msgid ""
"``preconditions``: The conditions that must be met before a DAG or step "
"can run."
msgstr ""

#: ../../source/yaml_format.rst:199
msgid ""
"``mailOn``: Whether to send an email notification when a DAG or step "
"fails or succeeds."
msgstr ""

#: ../../source/yaml_format.rst:200
msgid ""
"``MaxCleanUpTimeSec``: The maximum time to wait after sending a TERM "
"signal to running steps before killing them."
msgstr ""

#: ../../source/yaml_format.rst:201
msgid ""
"``handlerOn``: The command to execute when a DAG or step succeeds, fails,"
" cancels, or exits."
msgstr ""

#: ../../source/yaml_format.rst:202
msgid "``steps``: A list of steps to execute in the DAG."
msgstr ""

#: ../../source/yaml_format.rst:204
msgid ""
"In addition, a global configuration file, ``$DAGU_HOME/config.yaml``, can"
" be used to gather common settings, such as ``logDir`` or ``env``."
msgstr ""

#: ../../source/yaml_format.rst:206
msgid ""
"Note: If ``DAGU_HOME`` environment variable is not set, the default path "
"is ``$HOME/.dagu/config.yaml``."
msgstr ""

#: ../../source/yaml_format.rst:209
msgid "Available Fields for Steps"
msgstr ""

#: ../../source/yaml_format.rst:211
msgid "Each step can have its own set of configurations, including:"
msgstr ""

#: ../../source/yaml_format.rst:213
msgid "``name``: The name of the step."
msgstr ""

#: ../../source/yaml_format.rst:214
msgid "``description``: A brief description of the step."
msgstr ""

#: ../../source/yaml_format.rst:215
msgid "``dir``: The working directory for the step."
msgstr ""

#: ../../source/yaml_format.rst:216
msgid "``command``: The command and parameters to execute."
msgstr ""

#: ../../source/yaml_format.rst:217
msgid "``stdout``: The file to which the standard output is written."
msgstr ""

#: ../../source/yaml_format.rst:218
msgid "``output``: The variable to which the result is written."
msgstr ""

#: ../../source/yaml_format.rst:219
msgid "``script``: The script to execute."
msgstr ""

#: ../../source/yaml_format.rst:220
msgid ""
"``signalOnStop``: The signal name (e.g., ``SIGINT``) to be sent when the "
"process is stopped."
msgstr ""

#: ../../source/yaml_format.rst:221
msgid ""
"``mailOn``: Whether to send an email notification when the step fails or "
"succeeds."
msgstr ""

#: ../../source/yaml_format.rst:222
msgid ""
"``continueOn``: Whether to continue to the next step, regardless of "
"whether the step failed or not or the preconditions are met or not."
msgstr ""

#: ../../source/yaml_format.rst:223
msgid "``retryPolicy``: The retry policy for the step."
msgstr ""

#: ../../source/yaml_format.rst:224
msgid "``repeatPolicy``: The repeat policy for the step."
msgstr ""

#: ../../source/yaml_format.rst:225
msgid "``preconditions``: The conditions that must be met before a step can run."
msgstr ""

#: ../../source/yaml_format.rst:228
msgid "Example"
msgstr ""

